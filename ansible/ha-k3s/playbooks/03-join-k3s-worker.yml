---
- name: Join worker nodes to k3s cluster
  hosts: kube_node
  become: true
  vars:
    k3s_config_file: /etc/rancher/k3s/k3s.yaml

  tasks:
    - name: Get node IP address
      ansible.builtin.set_fact:
        node_ip: "{{ ansible_default_ipv4.address }}"

    - name: Get k3s token from first control plane node
      ansible.builtin.shell: cat /var/lib/rancher/k3s/server/node-token
      delegate_to: "{{ groups['kube_control_plane'][0] }}"
      register: k3s_token
      changed_when: false

    - name: Get CA certificate from first control plane node
      ansible.builtin.slurp:
        src: /var/lib/rancher/k3s/server/tls/server-ca.crt
      delegate_to: "{{ groups['kube_control_plane'][0] }}"
      register: ca_cert

    - name: Get client certificate from first control plane node
      ansible.builtin.slurp:
        src: /var/lib/rancher/k3s/server/tls/client-admin.crt
      delegate_to: "{{ groups['kube_control_plane'][0] }}"
      register: client_cert

    - name: Get client key from first control plane node
      ansible.builtin.slurp:
        src: /var/lib/rancher/k3s/server/tls/client-admin.key
      delegate_to: "{{ groups['kube_control_plane'][0] }}"
      register: client_key

    - name: Join node to k3s cluster as worker
      ansible.builtin.shell: >
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_TOKEN="{{ k3s_token.stdout }}" sh -s - agent
        --server https://{{ vip_address }}:6443
        --node-ip {{ node_ip }}
      register: k3s_join

    - name: Create k3s config directory
      ansible.builtin.file:
        path: "{{ k3s_config_path }}"
        state: directory
        mode: '0755'

    - name: Configure kubeconfig
      ansible.builtin.copy:
        content: |
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              certificate-authority-data: {{ ca_cert.content | b64decode | b64encode }}
              server: https://{{ vip_address }}:6443
            name: default
          contexts:
          - context:
              cluster: default
              user: default
            name: default
          current-context: default
          preferences: {}
          users:
          - name: default
            user:
              client-certificate-data: {{ client_cert.content | b64decode | b64encode }}
              client-key-data: {{ client_key.content | b64decode | b64encode }}
        dest: "{{ k3s_config_file }}"
        mode: '0644'

    - name: Set KUBECONFIG environment variable
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: 'KUBECONFIG={{ k3s_config_file }}'
        state: present

    - name: Install kubectl
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ k3s_version | regex_replace('^v([0-9]+\\.[0-9]+\\.[0-9]+)\\+k3s.*$', 'v\\1') }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'

    - name: Wait for node to be ready
      ansible.builtin.command: k3s kubectl get nodes {{ ansible_hostname }} -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
      register: node_status
      until: node_status.stdout == "True"
      retries: 30
      delay: 10
      environment:
        KUBECONFIG: "{{ k3s_config_file }}"
      changed_when: false
