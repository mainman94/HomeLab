---
- name: Join additional control plane nodes to k3s cluster
  hosts: "{{ groups['kube_control_plane'][1:] }}"
  become: true

  tasks:
    - name: Get node IP address
      ansible.builtin.set_fact:
        node_ip: "{{ ansible_default_ipv4.address }}"

    - name: Get k3s token from first control plane node
      ansible.builtin.shell: cat /var/lib/rancher/k3s/server/node-token
      delegate_to: "{{ groups['kube_control_plane'][0] }}"
      register: k3s_token
      changed_when: false

    - name: Join node to k3s cluster as server
      ansible.builtin.shell: >
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_TOKEN={{ k3s_token.stdout }} sh -s - server
        --server https://{{ vip_address }}:6443
        --tls-san {{ vip_address }}
        --node-ip {{ node_ip }}
        --disable traefik
        --disable servicelb
        --disable local-storage
      args:
        creates: "{{ k3s_config_file }}"
      register: k3s_join

    - name: Wait for k3s to be ready
      ansible.builtin.command: k3s kubectl get nodes
      register: k3s_ready
      until: k3s_ready.rc == 0
      retries: 30
      delay: 10

    - name: Set KUBECONFIG environment variable
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: 'KUBECONFIG={{ k3s_config_file }}'
        state: present

    - name: Install kubectl
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ k3s_version | regex_replace('^v([0-9]+\\.[0-9]+\\.[0-9]+)\\+k3s.*$', 'v\\1') }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'

    - name: Wait for node to be ready
      ansible.builtin.command: k3s kubectl get nodes {{ ansible_hostname }} -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
      register: node_status
      until: node_status.stdout == "True"
      retries: 30
      delay: 10
