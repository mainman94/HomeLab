- name: Delete existing VMs if present
  ansible.builtin.command: qm destroy {{ template.vmid }} --purge
  ignore_errors: true
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: delete_existing_vms
  changed_when: delete_existing_vms.rc != 0

- name: Download Ubuntu Cloud Image
  ansible.builtin.get_url:
    url: "{{ proxmox_cloud_template_image_url }}"
    dest: "{{ proxmox_cloud_template_image_path }}"
    force: true
    mode: "0644"

- name: Create new VM templates
  ansible.builtin.command: >
    qm create {{ template.vmid }} --name {{ template.name }} --memory {{ template.memory }}
    --cores {{ template.cores }} --net0 virtio,bridge=vmbr0 --ostype l26
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: create_vm
  changed_when: create_vm.rc != 0


- name: Import disk to storage pool
  ansible.builtin.command: >
    qm importdisk {{ template.vmid }} {{ proxmox_cloud_template_image_path }} {{ proxmox_cloud_template_storage_pool }}
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: import_diks
  changed_when: import_diks.rc != 0


- name: Attach imported disk to VM
  ansible.builtin.command: >
    qm set {{ template.vmid }} --scsihw virtio-scsi-pci --scsi0 {{ proxmox_cloud_template_storage_pool }}:vm-{{ template.vmid }}-disk-0
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: attach_disk
  changed_when: attach_disk.rc != 0


- name: Resize attached disk to proxmox_cloud_template_disk_size GB
  ansible.builtin.command: >
    qm resize {{ template.vmid }} scsi0 "{{ proxmox_cloud_template_disk_size }}"
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: resize_disk
  changed_when: resize_disk.rc != 0

- name: Set boot and serial settings
  ansible.builtin.command: >
    qm set {{ template.vmid }} --boot c --bootdisk scsi0 --serial0 socket --vga serial0
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: set_boot_serial
  changed_when: set_boot_serial.rc != 0

- name: Set CPU type to x86-64-v2-AES
  ansible.builtin.command: >
    qm set {{ template.vmid }} --cpu x86-64-v2-AES
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: set_cpu_type
  changed_when: set_cpu_type.rc != 0

- name: Enable QEMU Guest Agent
  ansible.builtin.command: >
    qm set {{ template.vmid }} --agent 1
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: enable_qemu_agent
  changed_when: enable_qemu_agent.rc != 0

- name: Convert VM to template
  ansible.builtin.command: >
    qm template {{ template.vmid }}
  loop: "{{ proxmox_cloud_template_cloud_templates }}"
  loop_control:
    loop_var: template
  register: convert_to_template
  changed_when: convert_to_template.rc != 0
